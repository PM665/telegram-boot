name: Build and Publish

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Determine project version
        id: version
        run: |
          VERSION=$(./gradlew -q properties | awk '/^version:/ { print $2 }')
          echo "Project version: ${VERSION}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build all modules
        run: ./gradlew --no-daemon clean build

      - name: Publish libraries to Maven Central (non-sample modules)
        if: success()
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew --no-daemon \
          -Dorg.gradle.jvmargs="--enable-native-access=ALL-UNNAMED" \
          publishToMavenCentral --debug

      - name: Summarize published version
        if: ${{ success() }}
        run: echo "Published project version ${{ steps.version.outputs.version }}"
